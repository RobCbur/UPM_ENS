org 1024

DBNZ: MACRO (ra,eti)
    sub ra,ra,1
    cmp r4,ra,0
    bb0 2,r4,eti
ENDMACRO

LEA: MACRO (ra, eti)
    or ra, r0, low(eti)
    or.u ra, ra, high(eti)
ENDMACRO


LOAD: MACRO (ra, eti)
    LEA (ra, eti)
    ld ra, ra, r0
ENDMACRO


POP: MACRO(ra)
    ld ra,r30,0
    st r0, r30,r0
    add r30,r30,4
ENDMACRO

PUSH: MACRO (ra)
    sub r30,r30,4
    st ra,r30,0
ENDMACRO


ref: data "ersafiasek 3516"
C: data "e" 
from: data 4
to: data 13

org 4000
BuscaCar:PUSH(r1) ;direccion de retorno ; r31, 32

PUSH(r31) ; antiguo r31 ; r31, 28
PUSH(r3) ; r3 = contador ; r31, 24
PUSH(r11) ; puntero ; r31, 20
PUSH(r4) ;cmp / temp ; r31, 16
PUSH(r6) ;tmp ; r31, 12
PUSH(r5) ;contiene C; r31, 08
PUSH(r12) ;contiene bit de palabra ; r31, 04
PUSH(r7) ; r31, 0

xor r7,r7,r7
xor r5, r5, r5
xor r3,r3,r3
xor r11,r11,r11
xor r4,r4,r4
xor r12,r12,r12


or r31, r30 ,0 ;marco de pila

ld r5, r31, 48
ld r11, r31, 44
ld r4, r31 , 40
ld r6, r31, 36
subu r7 , r6,r4
addu r11, r11, r4 
 

subu r11,r11,1     ;r11 = puntero cadena
subu r3,r3, 1   ;r3 = contador


addu r3,r3,1          
addu r11,r11,1 ;bucle

ld.bu r12, r11, 0        ; r12 = una palabra de la cadena
cmp r4 , r12 , r5
cmp r6 , r12 ,r0
or r4,r6,r4
cmp r6, r7, r3
or r4,r4,r6
bb0 2,r4, -8
      



or r29, r3, r0  
ld r4, r31 , 40        ; r3 a r29 
addu r29,r29, r4  
or r30 , r31, r0

POP(r7)
POP(r12)
POP(r5)
POP(r6)
POP(r4)
POP(r11)
POP(r3)
POP(r31)
POP(r1)
jmp(r1)

org 5000

START:

addu r30, r30, 204

LOAD(r3,C)
PUSH(r3) ; r31, 48
LEA(r3,ref)
PUSH(r3) ; r31, 44
LOAD(r3,from)
PUSH(r3) ; r31, 40
LOAD(r3,to)
PUSH(r3) ; r31, 36

LEA(r3, BuscaCar)

addu r4,r0,0x0A
addu r11,r0,0x0B
addu r12,r0,0x0C

jsr(r3)

POP(r3)



add r0, r4 ,0xf0

